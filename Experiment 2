#include<stdio.h>
#include<stdlib.h>
#include<limits.h>// to find the range of integer
#define MAX 100
int stack[MAX], top =-1;// top represents the element present in stack if  -1 means no element and 0 means 1 element

int isEmpty(){
    return (top == -1) ? 1 : 0;

}
int isFull(){
    return(top == MAX  - 1) ? 1 : 0;
}
void PUSH(){
    if(isFull()){
        printf("Stack Overflow!!!!\n");
    }
    else{
    int val;
    printf("Enter Element: ");
    scanf("%d",&val);
    top++;
    stack[top]=val;
    printf("Element added !!!\n");

}}
int POP(){
    if(isEmpty()){
        printf("Stack Underflow!!!!\n");
        return INT_MIN;
    }
    else{
        int val = stack[top];
        top --;
        return val;
    }
}

int PEEK(){
    if(isEmpty()){
        printf("Stack is empty!!!\n");
        return INT_MIN;
    }
    else{
      
        return stack[top];
    }
}
void show(){
    if(isEmpty()){
        printf("Stack is empty !!!/n");
    }
    else{
        printf("Stack Elements are : ");
        int i;
        for(i = top; i>=0; i--){
            printf("%d\n",stack[i]);
        }
    }
}

int main(){
    while(1){
        printf("1.Push  ");
        printf("2.Pop  ");
        printf("3.Peek  ");
        printf("4.Show  ");
        printf("5.Exit  ");    
        int choice, val;
        printf("Enter choice :");
        scanf("%d",&choice);
        
        switch(choice){
            case 1:
            PUSH();
            break;
            case 2:
            val = POP();
            if(val != INT_MIN){
                printf("%d pop from the stack !!\n",val);
            }
            break;
            case 3:
            val = PEEK();
            if(val != INT_MIN)
            printf("Stack top element is %d\n",val);
            break;
            case 4:
            show();
            break;
            case 5:
             exit(0);
            break;
            default:
            printf("invalid choice !!!!!\n");

        }
        system("pause");
    }
    return 0;
}
